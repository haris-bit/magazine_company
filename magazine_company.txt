JOIN statement
==============
SELECT *
FROM orders
JOIN customers
  ON orders.customer_id = customers.customer_id;


Selecting specific columns
==========================
SELECT orders.order_id, customers.customer_name
FROM orders
JOIN customers
  ON orders.customer_id = customers.customer_id;



Joining orders with subscriptions
=================================
SELECT *
FROM orders
JOIN subscriptions
  ON orders.subscription_id = subscriptions.subscription_id;






--Checkpoint 1
SELECT *
FROM orders
JOIN subscriptions
  ON orders.subscription_id = subscriptions.subscription_id;

--Checkpoint 2
SELECT *
FROM orders
JOIN subscriptions
  ON orders.subscription_id = subscriptions.subscription_id
WHERE subscriptions.description = 'Fashion Magazine';



Codecademy Times

--Checkpoint 1
SELECT COUNT(*)
FROM newspaper;


--Checkpoint 2
SELECT COUNT(*)
FROM online;

--Checkpoint 3
SELECT COUNT(*)
FROM newspaper
JOIN online
  ON newspaper.id = online.id



LEFT JOIN
=========


--Checkpoint 1
SELECT *
FROM newspaper
LEFT JOIN online
  ON newspaper.id = online.id;

--Checkpoint 2
SELECT *
FROM newspaper
LEFT JOIN online
  ON newspaper.id = online.id
WHERE online.id IS NULL;


--Checkpoint 3
SELECT COUNT(*)
FROM newspaper
LEFT JOIN online
  ON newspaper.id = online.id
WHERE online.id IS NULL;




Query for total number of subscribers in each month
===================================================


--Checkpoint 1
SELECT COUNT(*)
FROM newspaper
WHERE start_month <= 3
AND end_month >= 3;

--Checkpoint 2
SELECT *
FROM newspaper
CROSS JOIN months;

--Checkpoint 3
SELECT *
FROM newspaper
CROSS JOIN months
WHERE start_month <= month
AND end_month >= month;

--Checkpoint 4
SELECT month, COUNT(*)
FROM newspaper
CROSS JOIN months
WHERE start_month <= month
AND end_month >= month
GROUP BY month;




Use UNION to stack the newspaper table on top of the online table.
==================================================================


SELECT *
FROM newspaper
UNION
SELECT *
FROM online;



With Statement
==============
Often times, we want to combine two tables, but one of the tables is the result of another calculation.
=======================================================================================================


WITH previous_query AS (
  SELECT customer_id, COUNT(subscription_id) AS 'subscriptions'
  FROM orders
  GROUP BY customer_id
)

SELECT customers.customer_name, previous_query.subscriptions
FROM previous_query
JOIN customers
  ON previous_query.customer_id = customers.customer_id;